#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R         &kp T                          &kp UP                &kp Y  &kp U      &kp I          &kp O    &kp P     &kp ESCAPE
&kp RCTRL       &kp A  &kp S  &kp D     &kp F         &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J      &kp K          &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C     &kp V         &kp B  &kp K_MUTE              &kp DOWN              &kp N  &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp ENTER
                              &kp LGUI  &kp LEFT_ALT  &mo 1                                                &mo 2  &kp SPACE  &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp TAB    &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                                      &mmv MOVE_UP                     &kp CARET       &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp LCTRL  &kp N1           &kp N2  &kp N3    &kp N4      &kp N5                           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS       &kp EQUAL      &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp ESC    &kp NUMBER_6     &kp N7  &kp N8    &kp N9      &kp N0       &kp K_PLAY_PAUSE                    &mmv MOVE_DOWN                   &kp UNDERSCORE  &kp PLUS       &kp TILDE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RIGHT_ALT
                                    &trans    &trans      &trans                                                                            &kp ENTER       &kp SPACE      &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        raise_layer {
            display-name = "MISC";
            bindings = <
&bt BT_CLR_ALL  &kp F1        &kp F2        &kp F3         &kp F4           &kp F5                                      &kp K_SCROLL_UP                         &kp F6         &kp F7     &kp F8        &kp F9     &kp F10  &kp BSPC
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &kp C_BRI_UP   &kp C_VOLUME_UP  &trans               &kp LS(K_SCROLL_DOWN)  &mkp LCLK          &kp LS(K_SCROLL_UP)  &kp LEFT       &kp DOWN   &kp UP_ARROW  &kp RIGHT  &kp F11  &trans
&trans          &bt BT_SEL 2  &bt BT_SEL 3  &kp C_BRI_DEC  &kp C_VOL_DN     &mkp LCLK  &trans                           &kp K_SCROLL_DOWN                       &kp BACKSPACE  &kp ENTER  &trans        &trans     &kp F12  &trans
                                            &trans         &trans           &kp SPACE                                                                           &trans         &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
